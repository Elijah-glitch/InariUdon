name: Create Unity Package

on: push

jobs:
  prebuild:
    runs-on: ubuntu-latest
    outputs:
      package_name: ${{steps.package_name.outputs.package_name}}
    steps:
      - id: package_name
        run: echo "::set-output name=package_name::$(echo ${GITHUB_REPOSITORY##*/}-${GITHUB_REF##*/})"

  build:
    needs: prebuild
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          find Assets -name \*.meta > metaList
          mkdir build
          cp -r README.md LICENSE Documents~ build
          cp README.md build/README.txt
          cat metaList
      - uses: pCYSl5EDgo/create-unitypackage@master
        with:
          package-path: 'build/${{needs.prebuild.outputs.package_name}}.unitypackage'
          include-files: metaList
      - uses: actions/upload-artifact@master
        with:
          path: build
          name: ${{needs.prebuild.outputs.package_name}}

  release:
    runs-on: ubuntu-latest
    needs:
      - prebuild
      - build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@master
        with:
          path: ${{needs.prebuild.outputs.package_name}}
          name: ${{needs.prebuild.outputs.package_name}}
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          path: ${{needs.prebuild.outputs.package_name}}
          filename: '${{needs.prebuild.outputs.package_name}}.zip'
      - name: Release
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_PATH: '${{needs.prebuild.outputs.package_name}}.zip'
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
